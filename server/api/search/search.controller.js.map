{"version":3,"sources":["api/search/search.controller.js"],"names":["show","index","create","upsert","patch","destroy","Yelp","require","consumerSecret","process","env","ConsumerSecret","tokenSecret","TokenSecret","oauth_consumer_key","ConsumerKey","oauth_token","Token","req","res","yelp","consumer_key","consumer_secret","token","token_secret","search","location","params","id","sort","limit","term","err","data","console","log","status","send","venuesList","i","total","push","yelpId","businesses","name","rating","url","imageUrl","image_url","city","description","snippet_text","find","resFind","result","mergeLists","length","venues","count_users","all_users","j","_id","userId","userName","countUsers","allUsers","respondWithResult","statusCode","entity","json","patchUpdates","patches","apply","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","exec","catch","body","findOneAndUpdate","new","setDefaultsOnInsert","runValidators","findById"],"mappings":"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","file":"search.controller.js","sourcesContent":["/**\n * Using Rails-like standard naming convention for endpoints.\n * POST    /api/search              ->  create\n * GET     /api/search/:id          ->  show\n * DELETE  /api/search/:id          ->  destroy\n */\n\n'use strict';\n\nimport jsonpatch from 'fast-json-patch';\nimport Search from './search.model';\nvar Yelp = require('yelp');\n\nvar consumerSecret = process.env.ConsumerSecret,\n  tokenSecret = process.env.TokenSecret,\n  oauth_consumer_key = process.env.ConsumerKey,\n  oauth_token = process.env.Token;\n  \n\n/* Retrieves data from Yelp + MongoDB */\nexport function show(req, res) {\n  var yelp = new Yelp({\n    consumer_key: oauth_consumer_key,\n    consumer_secret: consumerSecret,\n    token: oauth_token,\n    token_secret: tokenSecret,\n  });\n\n  // Call YELP API\n  yelp.search({\n    location: req.params.id,\n    sort: 2,  // Highest Rated\n    limit: 40,\n    term: 'nightlife'\n  }, function (err, data) {\n    if (err) {\n      console.log(\"Error while getting Yelp results\");\n      console.log(err);\n      return res.status(500).send(err);\n    }\n    var venuesList = [];\n    for (var i = 0; i < data.total; i++) {\n      venuesList.push({\n        yelpId: data.businesses[i].id,\n        name: data.businesses[i].name,\n        rating: data.businesses[i].rating,\n        url: data.businesses[i].url,\n        imageUrl: data.businesses[i].image_url,\n        location: data.businesses[i].location.city,\n        description: data.businesses[i].snippet_text\n      });\n    }\n    Search.find({}, function (err, resFind) {\n      var result = mergeLists(venuesList, resFind);\n      //console.log(result);\n      console.log(\"Returning result of size: \" + result.length);\n      return res.status(200).send(result);\n    });\n\n  });\n}\n\n/* Returns merged list of Yelp locations and users atending */\nfunction mergeLists(yelp, venues) {\n  var result = [];\n  for (var i = 0; i < yelp.length; i++) {\n    var count_users = 0;\n    var all_users = [];\n    for (var j = 0; j < venues.length; j++) {\n      if (yelp[i].yelpId === venues[j].yelpId) {\n        count_users++;\n        all_users.push({\n          _id: venues[j]._id,\n          userId: venues[j].userId,\n          userName: venues[j].userName\n        });\n      }\n    }\n    result.push(yelp[i]);\n    result[i].countUsers = count_users;\n    result[i].allUsers = all_users;\n  }\n  return result;\n}\n\n/*\nSAMPLE API RESPONSE:\n{\n    \"businesses\": [\n        {\n            \"categories\": [\n                [\n                    \"Local Flavor\",\n                    \"localflavor\"\n                ],\n                [\n                    \"Mass Media\",\n                    \"massmedia\"\n                ]\n            ],\n            \"display_phone\": \"+1-415-908-3801\",\n            \"id\": \"yelp-san-francisco\",\n            \"image_url\": \"http://s3-media3.fl.yelpcdn.com/bphoto/nQK-6_vZMt5n88zsAS94ew/ms.jpg\",\n            \"is_claimed\": true,\n            \"is_closed\": false,\n            \"location\": {\n                \"address\": [\n                    \"140 New Montgomery St\"\n                ],\n                \"city\": \"San Francisco\",\n                \"coordinate\": {\n                    \"latitude\": 37.7867703362929,\n                    \"longitude\": -122.399958372115\n                },\n                \"country_code\": \"US\",\n                \"cross_streets\": \"Natoma St & Minna St\",\n                \"display_address\": [\n                    \"140 New Montgomery St\",\n                    \"Financial District\",\n                    \"San Francisco, CA 94105\"\n                ],\n                \"geo_accuracy\": 9.5,\n                \"neighborhoods\": [\n                    \"Financial District\",\n                    \"SoMa\"\n                ],\n                \"postal_code\": \"94105\",\n                \"state_code\": \"CA\"\n            },\n            \"mobile_url\": \"http://m.yelp.com/biz/yelp-san-francisco\",\n            \"name\": \"Yelp\",\n            \"phone\": \"4159083801\",\n            \"rating\": 2.5,\n            \"rating_img_url\": \"http://s3-media4.fl.yelpcdn.com/assets/2/www/img/c7fb9aff59f9/ico/stars/v1/stars_2_half.png\",\n            \"rating_img_url_large\": \"http://s3-media2.fl.yelpcdn.com/assets/2/www/img/d63e3add9901/ico/stars/v1/stars_large_2_half.png\",\n            \"rating_img_url_small\": \"http://s3-media4.fl.yelpcdn.com/assets/2/www/img/8e8633e5f8f0/ico/stars/v1/stars_small_2_half.png\",\n            \"review_count\": 7140,\n            \"snippet_image_url\": \"http://s3-media4.fl.yelpcdn.com/photo/YcjPScwVxF05kj6zt10Fxw/ms.jpg\",\n            \"snippet_text\": \"What would I do without Yelp?\\n\\nI wouldn't be HALF the foodie I've become it weren't for this business.    \\n\\nYelp makes it virtually effortless to discover new...\",\n            \"url\": \"http://www.yelp.com/biz/yelp-san-francisco\"\n        }\n    ],\n    \"total\": 2316\n}~\n*/\n\n////////////////////////////////////////////////////////////////\n\n\nfunction respondWithResult(res, statusCode) {\n  statusCode = statusCode || 200;\n  return function (entity) {\n    if (entity) {\n      return res.status(statusCode).json(entity);\n    }\n    return null;\n  };\n}\n\nfunction patchUpdates(patches) {\n  return function (entity) {\n    try {\n      jsonpatch.apply(entity, patches, /*validate*/ true);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n\n    return entity.save();\n  };\n}\n\nfunction removeEntity(res) {\n  return function (entity) {\n    if (entity) {\n      return entity.remove()\n        .then(() => {\n          res.status(204).end();\n        });\n    }\n  };\n}\n\nfunction handleEntityNotFound(res) {\n  return function (entity) {\n    if (!entity) {\n      res.status(404).end();\n      return null;\n    }\n    return entity;\n  };\n}\n\nfunction handleError(res, statusCode) {\n  statusCode = statusCode || 500;\n  return function (err) {\n    res.status(statusCode).send(err);\n  };\n}\n\n// Gets a list of Searchs\nexport function index(req, res) {\n  return Search.find().exec()\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n\n\n// Creates a new Search in the DB\nexport function create(req, res) {\n  return Search.create(req.body)\n    .then(respondWithResult(res, 201))\n    .catch(handleError(res));\n}\n\n// Upserts the given Search in the DB at the specified ID\nexport function upsert(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Search.findOneAndUpdate({ _id: req.params.id }, req.body, { new: true, upsert: true, setDefaultsOnInsert: true, runValidators: true }).exec()\n\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Updates an existing Search in the DB\nexport function patch(req, res) {\n  if (req.body._id) {\n    delete req.body._id;\n  }\n  return Search.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(patchUpdates(req.body))\n    .then(respondWithResult(res))\n    .catch(handleError(res));\n}\n\n// Deletes a Search from the DB\nexport function destroy(req, res) {\n  return Search.findById(req.params.id).exec()\n    .then(handleEntityNotFound(res))\n    .then(removeEntity(res))\n    .catch(handleError(res));\n}\n"]}